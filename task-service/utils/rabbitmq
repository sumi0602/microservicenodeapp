// utils/rabbitmq.js
const amqplib = require("amqplib");

let channel = null;
let connection = null;

async function connectRabbitMQ(queueName, retries = 10, delay = 5000, onMessage) {
  while (retries > 0) {
    try {
      connection = await amqplib.connect("amqp://guest:guest@rabbitmq_node:5672");
      channel = await connection.createChannel();
      await channel.assertQueue(queueName);
      console.log(`‚úÖ RabbitMQ connected and queue '${queueName}' asserted`);

      if (typeof onMessage === 'function') {
        await channel.consume(queueName, (msg) => {
          const data = JSON.parse(msg.content.toString());
          onMessage(data);
          channel.ack(msg);
        });
        console.log(`üì° Listening to '${queueName}' queue`);
      }

      return { channel, connection };
    } catch (err) {
      retries--;
      console.error("‚ùå RabbitMQ connection failed:", err.message);
      console.log(`‚è≥ Retrying in ${delay / 1000}s... (${retries} retries left)`);
      await new Promise(res => setTimeout(res, delay));
    }
  }
  throw new Error("‚ùå Failed to connect to RabbitMQ after multiple retries.");
}

module.exports = { connectRabbitMQ };
